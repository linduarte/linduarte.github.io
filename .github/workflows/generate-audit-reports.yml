name: Generate accessibility & performance reports

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - 'fix/*'

jobs:
  audit:
    name: Run pa11y & Lighthouse and upload reports
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    # (permissions are defined above)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Start simple HTTP server
        run: |
          # start a simple server in background and redirect output to /dev/null
          python -m http.server 8000 > /dev/null 2>&1 &
          # wait for the server to be reachable (give it a few seconds)
          for i in 1 2 3 4 5; do
            if curl -sS -I http://localhost:8000/landing.html | head -n1 | grep -q "200"; then
              echo "server up"; break
            else
              echo "waiting for server... ($i)"; sleep 1
            fi
          done

      # NOTE: temporary sanitization step that removed accidental '?=NUMBER' suffixes
      # was used during debugging. It has been removed now that the root cause is
      # being addressed; will be reintroduced only if CI artifacts show regressions.

      - name: Run pa11y reports
        run: |
          mkdir -p reports
          # capture both stdout (html) and stderr for debugging; keep job non-failing
          npx -y pa11y "http://localhost:8000/landing.html" --config pa11y-ci.config.json --reporter html > reports/landing-pa11y.html 2> reports/landing-pa11y.err || true
          npx -y pa11y "http://localhost:8000/app/templates/git-course/login.html" --config pa11y-ci.config.json --reporter html > reports/login-pa11y.html 2> reports/login-pa11y.err || true
          npx -y pa11y "http://localhost:8000/app/templates/git-course/1a-prefacio.html" --config pa11y-ci.config.json --reporter html > reports/prefacio-pa11y.html 2> reports/prefacio-pa11y.err || true
          # show small diagnostics to logs so that empty files are easier to debug in CI
          echo "Landing pa11y size:" && ls -l reports/landing-pa11y.* || true
          echo "Login pa11y size:" && ls -l reports/login-pa11y.* || true
          echo "Prefacio pa11y size:" && ls -l reports/prefacio-pa11y.* || true

      - name: Run Lighthouse (desktop)
        env:
          LH_HEADLESS_FLAGS: "--headless --no-sandbox --disable-gpu"
        run: |
          mkdir -p reports
          npx -y lighthouse "http://localhost:8000/landing.html" --chrome-flags="$LH_HEADLESS_FLAGS" --emulated-form-factor=desktop --throttling-method=provided --output=json --output-path=reports/landing-lighthouse.report.json || true
          npx -y lighthouse "http://localhost:8000/app/templates/git-course/login.html" --chrome-flags="$LH_HEADLESS_FLAGS" --emulated-form-factor=desktop --throttling-method=provided --output=json --output-path=reports/login-lighthouse.report.json || true
          npx -y lighthouse "http://localhost:8000/app/templates/git-course/1a-prefacio.html" --chrome-flags="$LH_HEADLESS_FLAGS" --emulated-form-factor=desktop --throttling-method=provided --output=json --output-path=reports/prefacio-lighthouse.report.json || true

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: audit-reports
          path: reports/

      - name: Post audit summary to PR (when applicable)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const repo = process.env.GITHUB_REPOSITORY;
            const runId = process.env.GITHUB_RUN_ID;
            const artifactUrl = `https://github.com/${repo}/suites/${runId}/artifacts`;
            const reports = [
              {file: 'reports/landing-lighthouse.report.json', title: 'Landing'},
              {file: 'reports/login-lighthouse.report.json', title: 'Login'},
              {file: 'reports/prefacio-lighthouse.report.json', title: 'Prefacio'},
            ];

            let body = `## Automated audit summary\n\nArtifacts: ${artifactUrl}\n\n`;
            for (const r of reports) {
              if (!fs.existsSync(r.file)) { body += `### ${r.title}\n- No Lighthouse report generated.\n\n`; continue; }
              try {
                const j = JSON.parse(fs.readFileSync(r.file, 'utf8'));
                const cats = j.categories || {};
                const perf = cats.performance ? Math.round((cats.performance.score||0)*100) : 'N/A';
                const acc = cats.accessibility ? Math.round((cats.accessibility.score||0)*100) : 'N/A';
                const bp = cats['best-practices'] ? Math.round((cats['best-practices'].score||0)*100) : 'N/A';
                const seo = cats.seo ? Math.round((cats.seo.score||0)*100) : 'N/A';
                const fcp = j.audits && j.audits['first-contentful-paint'] ? j.audits['first-contentful-paint'].displayValue : 'N/A';
                const lcp = j.audits && j.audits['largest-contentful-paint'] ? j.audits['largest-contentful-paint'].displayValue : 'N/A';
                const cls = j.audits && j.audits['cumulative-layout-shift'] ? j.audits['cumulative-layout-shift'].displayValue : 'N/A';
                body += `### ${r.title}\n- Performance: **${perf}**\n- Accessibility: **${acc}**\n- Best practices: **${bp}**\n- SEO: **${seo}**\n- FCP: ${fcp}\n- LCP: ${lcp}\n- CLS: ${cls}\n\n`;
              } catch (e) {
                body += `### ${r.title}\n- Failed to parse report: ${e.message}\n\n`;
              }
            }

            // Post comment to the PR, if any
            const issue_number = context.issue.number;
            if (!issue_number) {
              // No PR number found in context; skip posting but keep the job non-failing
              console.log('No issue/PR number found in context; skipping PR comment.');
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                body,
              });
            }
